// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id           String         @id @default(cuid())
  name         String?
  email        String         @unique
  password     String
  role         Role           @default(USER)
  isVerified   Boolean?       @default(false)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  Url          Url[]
  EmailSending EmailSending[]
}

model Url {
  id           String         @id @default(cuid())
  user_id      String
  url          String
  name         String?
  user         User           @relation(fields: [user_id], references: [id])
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  CheckTable   CheckTable[]
  EmailSending EmailSending[]
}

enum CheckStatus {
  UP
  DOWN
}

model CheckTable {
  id        String      @id @default(cuid())
  url_id    String
  url       Url         @relation(fields: [url_id], references: [id])
  status    CheckStatus @default(UP)
  checkedAt DateTime
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model EmailSending {
  id      String   @id @default(cuid())
  user_id String
  user    User     @relation(fields: [user_id], references: [id])
  url_id  String
  url     Url      @relation(fields: [url_id], references: [id])
  email   String
  status  String
  sendAt  DateTime
}
